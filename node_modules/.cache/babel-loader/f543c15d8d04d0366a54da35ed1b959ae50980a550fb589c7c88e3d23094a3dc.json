{"ast":null,"code":"var _jsxFileName = \"/Users/bingq/code/experimental/odyssey-apollo-tutoral/odyssey-lift-off-part3/client/src/components/query-result.js\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { LoadingSpinner } from '@apollo/space-kit/Loaders/LoadingSpinner';\n\n/**\n * Query Results conditionally renders Apollo useQuery hooks states:\n * loading, error or its children when data is ready\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryResult = _ref => {\n  let {\n    loading,\n    error,\n    data,\n    children\n  } = _ref;\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ERROR: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        \"data-testid\": \"spinner\",\n        size: \"large\",\n        theme: \"grayscale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nothing to show...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  if (data) {\n    return children;\n  }\n};\n_c = QueryResult;\nexport default QueryResult;\n\n/** Query Result styled components */\nconst SpinnerContainer = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh'\n});\n_c2 = SpinnerContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"QueryResult\");\n$RefreshReg$(_c2, \"SpinnerContainer\");","map":{"version":3,"names":["React","styled","LoadingSpinner","QueryResult","loading","error","data","children","message","SpinnerContainer","div","display","justifyContent","alignItems","width","height"],"sources":["/Users/bingq/code/experimental/odyssey-apollo-tutoral/odyssey-lift-off-part3/client/src/components/query-result.js"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { LoadingSpinner } from '@apollo/space-kit/Loaders/LoadingSpinner';\n\n/**\n * Query Results conditionally renders Apollo useQuery hooks states:\n * loading, error or its children when data is ready\n */\nconst QueryResult = ({ loading, error, data, children }) => {\n  if (error) {\n    return <p>ERROR: {error.message}</p>;\n  }\n  if (loading) {\n    return (\n      <SpinnerContainer>\n        <LoadingSpinner data-testid=\"spinner\" size=\"large\" theme=\"grayscale\" />\n      </SpinnerContainer>\n    );\n  }\n  if (!data) {\n    return <p>Nothing to show...</p>;\n  }\n  if (data) {\n    return children;\n  }\n};\n\nexport default QueryResult;\n\n/** Query Result styled components */\nconst SpinnerContainer = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh',\n});\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,cAAc,QAAQ,0CAA0C;;AAEzE;AACA;AACA;AACA;AAHA;AAIA,MAAMC,WAAW,GAAG,QAAwC;EAAA,IAAvC;IAAEC,OAAO;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAS,CAAC;EACrD,IAAIF,KAAK,EAAE;IACT,oBAAO;MAAA,sBAAWA,KAAK,CAACG,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EACtC;EACA,IAAIJ,OAAO,EAAE;IACX,oBACE,QAAC,gBAAgB;MAAA,uBACf,QAAC,cAAc;QAAC,eAAY,SAAS;QAAC,IAAI,EAAC,OAAO;QAAC,KAAK,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACtD;EAEvB;EACA,IAAI,CAACE,IAAI,EAAE;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EAClC;EACA,IAAIA,IAAI,EAAE;IACR,OAAOC,QAAQ;EACjB;AACF,CAAC;AAAC,KAjBIJ,WAAW;AAmBjB,eAAeA,WAAW;;AAE1B;AACA,MAAMM,gBAAgB,GAAGR,MAAM,CAACS,GAAG,CAAC;EAClCC,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE,QAAQ;EACpBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC,CAAC;AAAC,MANGN,gBAAgB;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}