{"ast":null,"code":"var _jsxFileName = \"/Users/bingq/code/experimental/odyssey-apollo-tutoral/odyssey-lift-off-client/client/src/pages/tracks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport { Layout, QueryResult } from '../components';\n\n/** TRACKS gql query to retreive all tracks */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TRACKS = gql`\n  query getTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        name\n        photo\n      }\n    }\n  }\n`;\n\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\nconst Tracks = () => {\n  _s();\n  var _data$tracksForHome;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TRACKS);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    grid: true,\n    children: /*#__PURE__*/_jsxDEV(QueryResult, {\n      error: error,\n      loading: loading,\n      data: data,\n      children: data === null || data === void 0 ? void 0 : (_data$tracksForHome = data.tracksForHome) === null || _data$tracksForHome === void 0 ? void 0 : _data$tracksForHome.map((track, index) => /*#__PURE__*/_jsxDEV(TrackCard, {\n        track: track\n      }, track.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Tracks, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = Tracks;\nexport default Tracks;\nvar _c;\n$RefreshReg$(_c, \"Tracks\");","map":{"version":3,"names":["React","useQuery","gql","TrackCard","Layout","QueryResult","TRACKS","Tracks","loading","error","data","tracksForHome","map","track","index","id"],"sources":["/Users/bingq/code/experimental/odyssey-apollo-tutoral/odyssey-lift-off-client/client/src/pages/tracks.js"],"sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport TrackCard from '../containers/track-card';\nimport { Layout, QueryResult } from '../components';\n\n/** TRACKS gql query to retreive all tracks */\nconst TRACKS = gql`\n  query getTracks {\n    tracksForHome {\n      id\n      title\n      thumbnail\n      length\n      modulesCount\n      author {\n        name\n        photo\n      }\n    }\n  }\n`;\n\n/**\n * Tracks Page is the Catstronauts home page.\n * We display a grid of tracks fetched with useQuery with the TRACKS query\n */\nconst Tracks = () => {\n  const { loading, error, data } = useQuery(TRACKS);\n\n  return (\n    <Layout grid>\n      <QueryResult error={error} loading={loading} data={data}>\n        {data?.tracksForHome?.map((track, index) => (\n          <TrackCard key={track.id} track={track} />\n        ))}\n      </QueryResult>\n    </Layout>\n  );\n};\n\nexport default Tracks;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAC9C,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,MAAM,EAAEC,WAAW,QAAQ,eAAe;;AAEnD;AAAA;AACA,MAAMC,MAAM,GAAGJ,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMK,MAAM,GAAG,MAAM;EAAA;EAAA;EACnB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAACK,MAAM,CAAC;EAEjD,oBACE,QAAC,MAAM;IAAC,IAAI;IAAA,uBACV,QAAC,WAAW;MAAC,KAAK,EAAEG,KAAM;MAAC,OAAO,EAAED,OAAQ;MAAC,IAAI,EAAEE,IAAK;MAAA,UACrDA,IAAI,aAAJA,IAAI,8CAAJA,IAAI,CAAEC,aAAa,wDAAnB,oBAAqBC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrC,QAAC,SAAS;QAAgB,KAAK,EAAED;MAAM,GAAvBA,KAAK,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACzB;IAAC;MAAA;MAAA;MAAA;IAAA;EACU;IAAA;IAAA;IAAA;EAAA,QACP;AAEb,CAAC;AAAC,GAZIR,MAAM;EAAA,QACuBN,QAAQ;AAAA;AAAA,KADrCM,MAAM;AAcZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}